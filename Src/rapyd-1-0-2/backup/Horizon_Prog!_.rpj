(lp1
(dp2
S'ModulePrevious'
p3
S'MA_41_Prog'
p4
sS'ModuleCurrent'
p5
S'Horizon_Prog'
p6
sS'Version'
p7
I1
sS'Geometry'
p8
S'1914x1008+-8+0'
p9
sS'ProjectName'
p10
g6
sS'ImportTypes'
p11
(lp12
(S'Pmw'
p13
S'import'
p14
tp15
a(S'Tkinter'
p16
S'from'
p17
tp18
asS'EditorWidths'
p19
((lp20
I132
aI132
a(lp21
I132
aI132
a(lp22
I130
aI130
atp23
sS'ID'
p24
S'Rapyd Project'
p25
sS'ParkingLot'
p26
(dp27
S'SelectedWidreq'
p28
NsS'Widreqs'
p29
(lp30
ssa(dp31
S'PreviousForm'
p32
S'-Main-'
p33
sS'OnTab'
p34
I1
sg33
(dp35
S'Cursor'
p36
S'8.13'
p37
sS'Text'
p38
(lp39
S''
aS'#!/usr/bin/python\n#coding=utf8\n\n'
p40
aS'import rpErrorHandler\nfrom Tkinter import *\n'
p41
aV\u000aconnected=0\u000aCOMtimeout=30\u000adefaultCOMportindex=5\u000astop_reading_COM=0\u000atrim=7\u000a\u000adef read_string_from_serial():\u000a    char = '*'\u000a    string=""\u000a    while (char<>'') and (char <> '\u005cr'):\u000a        char=ser.read()\u000a        string=string+char\u000a        if char=='\u005cr':\u000a            string=string+'\u005cn'     \u000a        if (char=='') and (string<>""):         \u000a            string=string+'\u005cn'\u000a    return string\u000a\u000adef read_and_print(disable_stop):\u000a    string=''\u000a    if stop_reading_COM==1 and disable_stop==0: return ''\u000a    global connected\u000a    if connected==1: \u000a        string=read_string_from_serial()\u000a        if string<>"":\u000a            App._ReceivedText.insert('1.0', string)  \u000a    return string\u000a            \u000adef verify(string,value,type):\u000a    if type=='ataddr':\u000a        if string.upper().find(("0X"+str(hex(numh()*256+numl()))[2:].zfill(4)).upper())==-1: return 0\u000a    if type=='ipaddr':\u000a        if string.find(value)==-1: return 0\u000a    if type=='macaddr':\u000a        if string.find(value[:12]+str(hex(numh())[2:]).upper().zfill(2)+':'+str(hex(numl())[2:]).upper().zfill(2))==-1: return 0\u000a        \u000a    return 1\u000a        \u000a\u000a\u000adef write_and_verify(param,value,type):\u000a    if value=='': return 1 #1-ok, 0-not ok\u000a    global stop_reading_COM\u000a    stop_reading_COM=1        \u000a\u000a    write_eep(param+' '+value)\u000a    string=write_eep(param)      \u000a\u000a    if verify(string,value,type)==0:\u000a        stop_reading_COM=0\u000a        return 0\u000a        \u000a    stop_reading_COM=0\u000a    return 1\u000a    \u000a    \u000adef loopproc():             \u000a     read_and_print(0)\u000a     setup_ip_mac_etc() \u000a     Root.after(COMtimeout,loopproc) \u000a\u000adef write_ram(string):\u000a    read_and_print(1)\u000a    ser.write(string+'\u005cr') \u000a    read_and_print(1)\u000a    return read_and_print(1)\u000a    \u000adef write_eep(string):\u000a    read_and_print(1)\u000a    ser.write('eeprom '+string+'\u005cr')\u000a    read_and_print(1)\u000a    return read_and_print(1)\u000a    \u000adef write_ram_eep(string):      \u000a    write_eep(string)\u000a    write_ram(string)\u000a    \u000a    \u000adef numh():\u000a    return int(math.floor(int(App.serial_number.get())/1000))\u000a   \u000adef numl():\u000a    return int(int(App.serial_number.get()) % 1000)\u000a\u000adef setup_ip_mac_etc():  \u000a\u000a    if App.serial_number.get()=='':return\u000a\u000a    try:\u000a        int(App.serial_number.get())\u000a    except:\u000a        App.serial_number.set('')\u000a        mbox.showerror('\u041e\u0448\u0438\u0431\u043a\u0430','\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b!')\u000a        return\u000a        \u000a        \u000a\u000a    if App.device.get()=='ma41' or App.device.get()=='ma45':    \u000a        App.ataddr.set(hex(numh()*256+numl()))\u000a        App.phyipaddr.set('10.2.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('')\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('')        \u000a\u000a    if App.device.get()=='lsr4':\u000a        App.ataddr.set(hex(numh()*256+numl()))\u000a        App.phyipaddr.set('10.1.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('')\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('')        \u000a\u000a    if App.device.get()=='lse4':\u000a        App.ataddr.set(hex(numh()*256+numl()))\u000a        App.phyipaddr.set('10.2.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('10.0.'+str(numh())+'.'+str(numl()))\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:]) \u000a\u000a    if App.device.get()=='1m500':            \u000a        App.ataddr.set(hex(numh()*256+numl()))\u000a        App.phyipaddr.set('10.1.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('10.0.'+str(numh())+'.'+str(numl()))\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])          \u000a        \u000a\u000atry:\u000a    #--------------------------------------------------------------------------#\u000a    # User code should go after this comment so it is inside the "try".        #\u000a    #     This allows rpErrorHandler to gain control on an error so it         #\u000a    #     can properly display a Rapyd-aware error message.                    #\u000a    #--------------------------------------------------------------------------#\u000a\u000a    #Adjust sys.path so we can find other modules of this project\u000a   \u000a   \u000a\u000a    \u000a    \u000a    \u000a    if '.' not in sys.path:\u000a        sys.path.append('.')\u000a    #Put lines to import other modules of this project here\u000a \u000a    import sys\u000a    \u000a    import serial\u000a    import msvcrt\u000a    import time\u000a    import math\u000a    import tkMessageBox as mbox\u000a \u000a \u000a    \u000a    if __name__ == '__main__':\u000a
p42
aS"        Root = Tk()\n        import Tkinter\n        Tkinter.CallWrapper = rpErrorHandler.CallWrapper\n        del Tkinter\n        App = Horizon_Prog(Root)\n        App.pack(expand='yes',fill='both')\n"
p43
aS"        Root.geometry('1000x640+10+10')\n        Root.title('Horizon programming')\n        \n\n        \n        Root.after(COMtimeout,loopproc)\n        \n        def left_key(event): \n           if App.ArrowKeysOn.get()==1:\n               if connected==1:\n                   App._on__left_command()\n            \n        def right_key(event):\n           if App.ArrowKeysOn.get()==1:\n                if connected==1:\n                   App._on__right_command()            \n\n        def up_key(event):\n                if connected==1:\n                   App._on__prog_and_increment_command()                \n        \n        Root.bind('<Left>', left_key)\n        Root.bind('<Right>', right_key)\n        Root.bind('<Up>', up_key)\n\n        \n        Root.mainloop()\n    #--------------------------------------------------------------------------#\n    # User code should go above this comment.                                  #\n    #--------------------------------------------------------------------------#\nexcept:\n    rpErrorHandler.RunError()"
p44
asg7
I0
sS'Sha'
p45
I10165631
ssS'Forms'
p46
(lp47
(dp48
S'Requested'
p49
S'Gui'
p50
sS'Name'
p51
S'Horizon_Prog'
p52
sg28
S'_Label12'
p53
sS'Type'
p54
S'Tkinter.Frame'
p55
sS'Lines'
p56
(lp57
(lp58
I9854
aI4994
aI1
aa(lp59
I2520
aI4994
aI1
aa(lp60
I1260
aI7884
aI0
aa(lp61
I1260
aI7255
aI0
aa(lp62
I1260
aI6941
aI0
aa(lp63
I475
aI7570
aI1
aa(lp64
I1284
aI7570
aI1
aa(lp65
I2051
aI8936
aI1
aa(lp66
I6184
aI5502
aI0
aa(lp67
I6184
aI6505
aI0
aa(lp68
I6184
aI8102
aI0
aa(lp69
I6184
aI8561
aI0
aa(lp70
I6184
aI9069
aI0
aa(lp71
I6184
aI6892
aI0
aa(lp72
I6184
aI7388
aI0
aasg38
(dp73
g36
S'290.42'
p74
sg38
(lp75
S'#------------------------------------------------------------------------------#\n#                                                                              #\n#                                 Horizon_Prog                                 #\n#                                                                              #\n#------------------------------------------------------------------------------#\nclass Horizon_Prog(Frame):\n    def __init__(self,Master=None,*pos,**kw):\n'
p76
aS'        #\n        #Your code here\n        #    \n'
p77
aV\u000a        apply(Frame.__init__,(self,Master),kw)\u000a        self.device = StringVar()\u000a        self.ArrowKeysOn = IntVar()\u000a        self.COM_port_index = StringVar()\u000a        self.ataddr = StringVar()\u000a        self.entry_at_addr = StringVar()\u000a        self.entry_at_addr_exe = StringVar()\u000a        self.entry_at_addr_rt = StringVar()\u000a        self.ethipaddr = StringVar()\u000a        self.ethmacaddr = StringVar()\u000a        self.ifbw = IntVar()\u000a        self.entry_ipaddr = StringVar()\u000a        self.phyipaddr = StringVar()\u000a        self.phymacaddr = StringVar()\u000a        self.serial_number = StringVar()\u000a        self.text_to_send = StringVar()\u000a        self._Frame2 = Frame(self)\u000a        self._Frame2.pack(fill='y',side='left')\u000a        self._Frame4 = Frame(self,background='#dbdbdb')\u000a        self._Frame4.pack(fill='y',side='left')\u000a        self._Frame3 = Frame(self)\u000a        self._Frame3.pack(side='left')\u000a        self._Frame6 = Frame(self._Frame2)\u000a        self._Frame6.pack(side='top')\u000a        self._Label1 = Label(self._Frame6\u000a            ,text='\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u043e\u043c\u0435\u0440 COM-\u043f\u043e\u0440\u0442\u0430 (\u0441\u043c. \u0434\u0438\u0441\u043f\u0435\u0442\u0447\u0435\u0440 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432):')\u000a        self._Label1.pack(side='top')\u000a        self._COM_port_index = Entry(self._Frame6\u000a            ,textvariable=self.COM_port_index)\u000a        self._COM_port_index.pack(side='top')\u000a        self._COM_port_connect = Button(self._Frame6\u000a            ,command=self._on__COM_port_connect_command,text='\u041e\u0442\u043a\u0440\u044b\u0442\u044c COM-\u043f\u043e\u0440\u0442')\u000a        self._COM_port_connect.pack(side='top')\u000a        self._Label3 = Label(self._Frame6,justify='left'\u000a            ,text='\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e:')\u000a        self._Label3.pack(side='top')\u000a        self._MA41 = Radiobutton(self._Frame6,command=self._set_serial\u000a            ,justify='left',text='\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-41',value='ma41'\u000a            ,variable=self.device)\u000a        self._MA41.pack(side='top')\u000a        self._MA45 = Radiobutton(self._Frame6,command=self._set_serial\u000a            ,justify='left',text='\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-45',value='ma45'\u000a            ,variable=self.device)\u000a        self._MA45.pack(side='top')\u000a        self._LSR4 = Radiobutton(self._Frame6,command=self._set_serial\u000a            ,justify='left',text='\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04204',value='lsr4'\u000a            ,variable=self.device)\u000a        self._LSR4.pack(side='top')\u000a        self._LSE4 = Radiobutton(self._Frame6,command=self._set_serial\u000a            ,justify='left',text='\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04154',value='lse4'\u000a            ,variable=self.device)\u000a        self._LSE4.pack(side='top')\u000a        self._1M500 = Radiobutton(self._Frame6,command=self._set_serial\u000a            ,justify='left',text='\u041a\u0430\u0441\u0441\u0435\u0442\u0430 1-M-500',value='1m500'\u000a            ,variable=self.device)\u000a        self._1M500.pack(side='top')\u000a        self._Label2 = Label(self._Frame6,text='\u0421\u0435\u0440\u0438\u0439\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440:')\u000a        self._Label2.pack(side='top')\u000a        self._serialnumber = Entry(self._Frame6,textvariable=self.serial_number)\u000a        self._serialnumber.pack(side='top')\u000a        self._prog_and_increment = Button(self._Frame6\u000a            ,command=self._on__prog_and_increment_command,state='disabled'\u000a            ,text='Write to EEPROM ataddr, ipaddr, macaddr, ifbw and increment serial number (up key)')\u000a        self._prog_and_increment.pack(side='top')\u000a        self._Label9 = Label(self._Frame6,text='at addr')\u000a        self._Label9.pack(side='top')\u000a        self._ataddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.ataddr)\u000a        self._ataddr.pack(side='top')\u000a        self._Label5 = Label(self._Frame6,text='phy ipaddr:')\u000a        self._Label5.pack(side='top')\u000a        self._phyipaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.phyipaddr)\u000a        self._phyipaddr.pack(side='top')\u000a        self._Label6 = Label(self._Frame6,text='eth ipaddr:')\u000a        self._Label6.pack(side='top')\u000a        self._ethipaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.ethipaddr)\u000a        self._ethipaddr.pack(side='top')\u000a        self._ethmacaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.ethmacaddr)\u000a        self._ethmacaddr.pack(side='bottom')\u000a        self._Label8 = Label(self._Frame6,text='eth macaddr:')\u000a        self._Label8.pack(side='bottom')\u000a        self._phymacaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.phymacaddr)\u000a        self._phymacaddr.pack(side='bottom')\u000a        self._Label7 = Label(self._Frame6,text='phy macaddr:')\u000a        self._Label7.pack(side='bottom')\u000a        self._Frame1 = Frame(self._Frame2)\u000a        self._Frame1.pack(side='top')\u000a        self._Label10 = Label(self._Frame1,text='at frequency trim:')\u000a        self._Label10.pack(side='top')\u000a        self._Frame10 = Frame(self._Frame2)\u000a        self._Frame10.pack(side='top')\u000a        self._Frame7 = Frame(self._Frame2)\u000a        self._Frame7.pack(side='top')\u000a        self._Frame14 = Frame(self._Frame4)\u000a        self._Frame14.pack(side='top')\u000a        self._ReceivedText = Text(self._Frame14)\u000a        self._ReceivedText.pack(side='bottom')\u000a        self._label_Rcvd_Text = Label(self._Frame14\u000a            ,text='\u041f\u0440\u0438\u043d\u044f\u0442\u043e \u043e\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430:')\u000a        self._label_Rcvd_Text.pack(side='bottom')\u000a        self._send = Button(self._Frame14,command=self._on__send_command\u000a            ,state='disabled',text='\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0443')\u000a        self._send.pack(side='bottom')\u000a        self._text_to_send = Entry(self._Frame14,textvariable=self.text_to_send)\u000a        self._text_to_send.pack(side='bottom')\u000a        self._Label4 = Label(self._Frame14,text='\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438:')\u000a        self._Label4.pack(side='bottom')\u000a        self._Frame9 = Frame(self._Frame4)\u000a        self._Frame9.pack(fill='x',side='top')\u000a        self._btn_ping = Button(self._Frame9,command=self._on__btn_ping_command\u000a            ,state='disabled',text='ping')\u000a        self._btn_ping.pack(side='left')\u000a        self._ipaddr = Entry(self._Frame9,textvariable=self.entry_ipaddr)\u000a        self._ipaddr.pack(side='left')\u000a        self._Frame15 = Frame(self._Frame4)\u000a        self._Frame15.pack(fill='x',side='top')\u000a        self._btn_phyipaddr = Button(self._Frame15\u000a            ,command=self._on__btn_phyipaddr_command,state='disabled'\u000a            ,text='phy ipaddr')\u000a        self._btn_phyipaddr.pack(anchor='w',side='left')\u000a        self._btn_ataddr = Button(self._Frame15\u000a            ,command=self._on__btn_ataddr_command,state='disabled'\u000a            ,text='at addr')\u000a        self._btn_ataddr.pack(side='left')\u000a        self._Frame18 = Frame(self._Frame4)\u000a        self._Frame18.pack(fill='x',side='top')\u000a        self._btn_adf_tst = Button(self._Frame18\u000a            ,command=self._on__btn_adf_tst_command,state='disabled'\u000a            ,text='adf tst')\u000a        self._btn_adf_tst.pack(anchor='w',side='left')\u000a        self._btn_adf_tst_50 = Button(self._Frame18\u000a            ,command=self._on__btn_adf_tst_50_command,state='disabled'\u000a            ,text='adf tst 50')\u000a        self._btn_adf_tst_50.pack(anchor='w',side='left')\u000a        self._Frame19 = Frame(self._Frame4)\u000a        self._Frame19.pack(fill='x',side='top')\u000a        self._btn_dbg0 = Button(self._Frame19,command=self._on__btn_dbg0_command\u000a            ,state='disabled',text='dbg 0')\u000a        self._btn_dbg0.pack(anchor='w',side='left')\u000a        self._btn_dbg1 = Button(self._Frame19,command=self._on__btn_dbg1_command\u000a            ,state='disabled',text='dbg 1')\u000a        self._btn_dbg1.pack(anchor='w',side='left')\u000a        self._Frame16 = Frame(self._Frame4)\u000a        self._Frame16.pack(fill='x',side='top')\u000a        self._btn_at_dst_rt = Button(self._Frame16\u000a            ,command=self._on__btn_at_dst_rt_command,state='disabled'\u000a            ,text='at dst 0xXXXX + rt')\u000a        self._btn_at_dst_rt.pack(anchor='w',side='left')\u000a        self._entry_at_addr = Entry(self._Frame16\u000a            ,textvariable=self.entry_at_addr)\u000a        self._entry_at_addr.pack(side='left')\u000a        self._Frame17 = Frame(self._Frame4)\u000a        self._Frame17.pack(fill='x',side='top')\u000a        self._Label11 = Label(self._Frame17,text='\u041b\u0421-\u04204:')\u000a        self._Label11.pack(side='left')\u000a        self._entry_at_addr_exe = Entry(self._Frame17\u000a            ,textvariable=self.entry_at_addr_exe)\u000a        self._entry_at_addr_exe.pack(side='left')\u000a        self._btn_exe_at_dst_rt = Button(self._Frame17\u000a            ,command=self._on__btn_exe_at_dst_rt_command,state='disabled'\u000a            ,text='exe 0xXXXX at dst 0xXXXX + rt')\u000a        self._btn_exe_at_dst_rt.pack(side='left')\u000a        self._Label12 = Label(self._Frame17,text='\u041c\u0410:')\u000a        self._Label12.pack(side='left')\u000a        self._entry_at_addr_rt = Entry(self._Frame17\u000a            ,textvariable=self.entry_at_addr_rt)\u000a        self._entry_at_addr_rt.pack(side='left')\u000a        self._Frame20 = Frame(self._Frame4)\u000a        self._Frame20.pack(fill='x',side='top')\u000a        self._Frame5 = Frame(self._Frame10)\u000a        self._Frame5.pack(side='left')\u000a        self._left = Button(self._Frame5,command=self._on__left_command\u000a            ,state='disabled',text='<-------(left key)--at trim left')\u000a        self._left.pack(side='left')\u000a        self._Frame13 = Frame(self._Frame10)\u000a        self._Frame13.pack(side='left')\u000a        self._right = Button(self._Frame13,command=self._on__right_command\u000a            ,state='disabled',text='at trim right--(right key)------->')\u000a        self._right.pack(side='left')\u000a        self._Frame8 = Frame(self._Frame10)\u000a        self._Frame8.pack(side='left')\u000a        self._ArrowKeysOn = Checkbutton(self._Frame8\u000a            ,text='Arrow keys control on',variable=self.ArrowKeysOn)\u000a        self._ArrowKeysOn.pack(side='left')\u000a        self._Frame11 = Frame(self._Frame7)\u000a        self._Frame11.pack(side='left')\u000a        self._ifbw0 = Radiobutton(self._Frame11,text='ifbw 0 (\u0434\u043b\u044f ADF7021)'\u000a            ,value=0,variable=self.ifbw)\u000a        self._ifbw0.pack(side='top')\u000a        self._ifbw1 = Radiobutton(self._Frame11,text='ifbw 1 (\u0434\u043b\u044f ADF7021-N)'\u000a            ,value=1,variable=self.ifbw)\u000a        self._ifbw1.pack(side='top')\u000a        self._Frame12 = Frame(self._Frame7)\u000a        self._Frame12.pack(side='left')\u000a        self._set_ifbw = Button(self._Frame12,command=self._on__set_ifbw_command\u000a            ,state='disabled',text='Set IFBW')\u000a        self._set_ifbw.pack(side='top')\u000a
p78
aS'        #\n        #Your code here\n        #\n        \n\n            \n\n        \n        self.device.set(\'ma41\')\n        self.serial_number.set(\'16001\')\n        self.ifbw.set(0)\n        \n        self.COM_port_index.set(str(defaultCOMportindex))\n        self.text_to_send.set(str("sys info"))\n        self.entry_ipaddr.set(\'10.2.1.20\')\n        self.entry_at_addr.set(\'0x0001\')\n        self.entry_at_addr_exe.set(\'0x1001\')\n        self.entry_at_addr_rt.set(\'0x0077\')\n        \n'
p79
aS'    #\n    #Start of event handler methods\n    #\n'
p80
aS'\n'
aS'\n    def _on__COM_port_connect_command(self'
p81
aV,Event=None):\u000a        global connected\u000a        try:\u000a            global ser\u000a            ser = serial.Serial("COM"+self.COM_port_index.get(),timeout=0.02)\u000a            ser.baudrate = 115200\u000a            connected=1\u000a            self._COM_port_connect.config(state='disabled')\u000a            self._prog_and_increment.config(state="normal")\u000a            self._send.config(state="normal")\u000a            self._set_ifbw.config(state="normal")\u000a            self._prog_and_increment.config(state="normal")\u000a            self._left.config(state="normal")\u000a            self._right.config(state="normal")\u000a            self._btn_ping.config(state="normal")\u000a            self._btn_phyipaddr.config(state="normal")\u000a            self._btn_ataddr.config(state="normal")\u000a            self._btn_adf_tst.config(state="normal")            \u000a            self._btn_adf_tst_50.config(state="normal")            \u000a            self._btn_dbg0.config(state="normal")\u000a            self._btn_dbg1.config(state="normal")\u000a            self._btn_at_dst_rt.config(state="normal")\u000a            self._btn_exe_at_dst_rt.config(state="normal")\u000a            \u000a        except:            \u000a            connected=0\u000a            mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430", "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044c COM-\u043f\u043e\u0440\u0442")  \u000a            \u000a        \u000a\u000a\u000a
p82
aS'\n    def _on__btn_adf_tst_50_command(self'
p83
aS",Event=None):\n        write_ram('adf tst 50')\n"
p84
aS'\n    def _on__btn_adf_tst_command(self'
p85
aS",Event=None):\n        write_ram('adf tst')\n"
p86
aS'\n    def _on__btn_at_dst_rt_command(self'
p87
aS",Event=None):\n        write_ram('at dst '+str(self.entry_at_addr.get()))\n        write_ram('rt')\n"
p88
aS'\n    def _on__btn_ataddr_command(self'
p89
aS",Event=None):\n        write_ram('at addr')\n"
p90
aS'\n    def _on__btn_dbg0_command(self'
p91
aS",Event=None):\n        write_ram('dbg 0')\n"
p92
aS'\n    def _on__btn_dbg1_command(self'
p93
aS",Event=None):\n        write_ram('dbg 1')\n"
p94
aS'\n    def _on__btn_exe_at_dst_rt_command(self'
p95
aS",Event=None):\n        write_ram('exe '+self.entry_at_addr_exe.get()+' at dst '+self.entry_at_addr_rt.get())\n        write_ram('exe '+self.entry_at_addr_exe.get()+' rt')\n"
p96
aS'\n    def _on__btn_phyipaddr_command(self'
p97
aS",Event=None):\n        write_ram('phy ipaddr')\n"
p98
aS'\n    def _on__btn_ping_command(self'
p99
aS",Event=None):\n        write_ram('ping '+str(self.entry_ipaddr.get()))\n"
p100
aS'\n    def _on__left_command(self'
p101
aS',Event=None):\n        global trim\n        if trim <15:\n            trim+=1\n            read_and_print(1)\n            write_ram_eep("at trim "+str(trim)+\'\\r\')\n            read_and_print(1)\n            read_and_print(1)\n'
p102
aS'\n    def _on__prog_and_increment_command(self'
p103
aV,Event=None):\u000a        setup_ip_mac_etc()\u000a        ok=1\u000a\u000a        if write_and_verify('at addr',self.ataddr.get(),'ataddr')==0:            \u000a           ok=0\u000a           mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430","\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0438\u0441\u0438 at addr")\u000a\u000a        if write_and_verify('phy ipaddr',self.phyipaddr.get(),'ipaddr')==0:            \u000a           ok=0\u000a           mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430","\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0438\u0441\u0438 phy ipaddr")\u000a           \u000a        if write_and_verify('eth ipaddr',self.ethipaddr.get(),'ipaddr')==0:            \u000a           ok=0\u000a           mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430","\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0438\u0441\u0438 eth ipaddr")   \u000a           \u000a        if write_and_verify('phy macaddr',self.phymacaddr.get(),'macaddr')==0:            \u000a           ok=0\u000a           mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430","\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0438\u0441\u0438 phy macaddr")                 \u000a           \u000a        if write_and_verify('eth macaddr',self.ethmacaddr.get(),'macaddr')==0:            \u000a           ok=0\u000a           mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430","\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0438\u0441\u0438 eth macaddr")\u000a           \u000a        self._on__set_ifbw_command()\u000a           \u000a        \u000a        if ok==1:\u000a             self.serial_number.set(str(int(self.serial_number.get())+1))\u000a        \u000a        \u000a        \u000a
p104
aS'\n    def _on__right_command(self'
p105
aS',Event=None):\n        global trim\n        if trim >0:\n            trim-=1\n            read_and_print(1)\n            write_ram_eep("at trim "+str(trim)+\'\\r\')\n            read_and_print(1)\n'
p106
aS'\n    def _on__send_command(self'
p107
aS",Event=None):\n        ser.write(self._text_to_send.get()+'\\r')\n        \n\n"
p108
aS'\n    def _on__set_ifbw_command(self'
p109
aS",Event=None):        \n        write_ram_eep('adf ifbw '+str(self.ifbw.get()))\n        \n\n"
p110
aS'\n    def _set_serial(self'
p111
aS",Event=None):\n        if self.device.get()=='ma41':\n            self.serial_number.set('16001')\n            \n        if self.device.get()=='ma45':\n            self.serial_number.set('16001')         \n\n        if self.device.get()=='lsr4':\n            self.serial_number.set('1008')\n\n        if self.device.get()=='lse4':\n            self.serial_number.set('1008')\n      \n        if self.device.get()=='1m500':\n            self.serial_number.set('1008')\n            \n        setup_ip_mac_etc()\n\n\n      \n"
p112
aS'    #\n    #Start of non-Rapyd user code\n    #\n'
p113
aS''
asg7
I0
sg45
I1468031
ssg29
(lp114
(dp115
S'ModuleName'
p116
S'Tkinter'
p117
sg51
g52
sS'WidgetName'
p118
S'Frame'
p119
sS'PackOptions'
p120
(lp121
sg24
(I0
tp122
sS'XY'
p123
(I0
I0
tp124
sS'Bindings'
p125
(lp126
sS'Options'
p127
(lp128
sa(dp129
g116
S'Tkinter'
p130
sg51
S'_1M500'
p131
sg118
S'Radiobutton'
p132
sg120
(lp133
sg24
Nsg123
(lp134
I1850
aI2600
asg125
(lp135
sg127
(lp136
(dp137
g51
S'text'
p138
sS'Value'
p139
V\u041a\u0430\u0441\u0441\u0435\u0442\u0430 1-M-500
p140
sS'Extra'
p141
Nsa(dp142
g51
S'variable'
p143
sg139
S'device'
p144
sg141
S'is.as'
p145
sa(dp146
g51
S'value'
p147
sg139
S'1m500'
p148
sg141
Nsa(dp149
g51
S'command'
p150
sg139
S'_set_serial'
p151
sg141
I1
sa(dp152
g51
S'justify'
p153
sg139
S'left'
p154
sg141
Nsasa(dp155
g116
S'Tkinter'
p156
sg51
S'_ArrowKeysOn'
p157
sg118
S'Checkbutton'
p158
sg120
(lp159
sg24
Nsg123
(lp160
I1570
aI7545
asg125
(lp161
sg127
(lp162
(dp163
g51
S'text'
p164
sg139
S'Arrow keys control on'
p165
sg141
Nsa(dp166
g51
S'variable'
p167
sg139
S'ArrowKeysOn'
p168
sg141
S'sif.ai'
p169
sasa(dp170
g116
S'Tkinter'
p171
sg51
S'_COM_port_connect'
p172
sg118
S'Button'
p173
sg120
(lp174
sg24
Nsg123
(lp175
I1850
aI762
asg125
(lp176
sg127
(lp177
(dp178
g51
S'text'
p179
sg139
V\u041e\u0442\u043a\u0440\u044b\u0442\u044c COM-\u043f\u043e\u0440\u0442
p180
sg141
Nsa(dp181
g51
S'command'
p182
sg139
S'_on__COM_port_connect_command'
p183
sg141
I1
sasa(dp184
g116
g171
sg51
S'_COM_port_index'
p185
sg118
S'Entry'
p186
sg120
(lp187
sg24
Nsg123
(lp188
I1850
aI423
asg125
(lp189
sg127
(lp190
(dp191
g51
S'textvariable'
p192
sg139
S'COM_port_index'
p193
sg141
S's.as'
p194
sasa(dp195
g116
S'Tkinter'
p196
sg51
S'_Frame1'
p197
sg118
S'Frame'
p198
sg120
(lp199
sg24
(I0
I0
I1
tp200
sg123
g124
sg125
(lp201
sg127
(lp202
sa(dp203
g116
g196
sg51
S'_Frame10'
p204
sg118
g198
sg120
(lp205
sg24
(I0
I0
I2
tp206
sg123
g124
sg125
(lp207
sg127
(lp208
sa(dp209
g116
g196
sg51
S'_Frame11'
p210
sg118
g198
sg120
(lp211
sg24
(I0
I0
I3
I0
tp212
sg123
g124
sg125
(lp213
sg127
(lp214
sa(dp215
g116
g196
sg51
S'_Frame12'
p216
sg118
g198
sg120
(lp217
sg24
(I0
I0
I3
I1
tp218
sg123
g124
sg125
(lp219
sg127
(lp220
sa(dp221
g116
g196
sg51
S'_Frame13'
p222
sg118
g198
sg120
(lp223
sg24
(I0
I0
I2
I1
tp224
sg123
g124
sg125
(lp225
sg127
(lp226
sa(dp227
g116
S'Tkinter'
p228
sg51
S'_Frame14'
p229
sg118
S'Frame'
p230
sg120
(lp231
sg24
(I0
I1
I0
tp232
sg123
g124
sg125
(lp233
sg127
(lp234
sa(dp235
g116
g228
sg51
S'_Frame15'
p236
sg118
g230
sg120
(lp237
(dp238
g51
S'fill'
p239
sg139
S'x'
sasg24
(I0
I1
I2
tp240
sg123
g124
sg125
(lp241
sg127
(lp242
sa(dp243
g116
S'Tkinter'
p244
sg51
S'_Frame16'
p245
sg118
S'Frame'
p246
sg120
(lp247
(dp248
g51
g239
sg139
S'x'
sasg24
(I0
I1
I5
tp249
sg123
g124
sg125
(lp250
sg127
(lp251
sa(dp252
g116
g244
sg51
S'_Frame17'
p253
sg118
g246
sg120
(lp254
(dp255
g51
g239
sg139
S'x'
sasg24
(I0
I1
I6
tp256
sg123
g124
sg125
(lp257
sg127
(lp258
sa(dp259
g116
g244
sg51
S'_Frame18'
p260
sg118
g246
sg120
(lp261
(dp262
g51
g239
sg139
S'x'
sasg24
(I0
I1
I3
tp263
sg123
g124
sg125
(lp264
sg127
(lp265
sa(dp266
g116
g244
sg51
S'_Frame19'
p267
sg118
g246
sg120
(lp268
(dp269
g51
g239
sg139
S'x'
sasg24
(I0
I1
I4
tp270
sg123
g124
sg125
(lp271
sg127
(lp272
sa(dp273
g116
S'Tkinter'
p274
sg51
S'_Frame2'
p275
sg118
S'Frame'
p276
sg120
(lp277
(dp278
g51
g239
sg139
S'y'
sasg24
(I0
I0
tp279
sg123
g124
sg125
(lp280
sg127
(lp281
sa(dp282
g116
g244
sg51
S'_Frame20'
p283
sg118
g246
sg120
(lp284
(dp285
g51
g239
sg139
S'x'
sasg24
(I0
I1
I7
tp286
sg123
g124
sg125
(lp287
sg127
(lp288
sa(dp289
g116
S'Tkinter'
p290
sg51
S'_Frame3'
p291
sg118
S'Frame'
p292
sg120
(lp293
sg24
(I0
I2
tp294
sg123
g124
sg125
(lp295
sg127
(lp296
sa(dp297
g116
g290
sg51
S'_Frame4'
p298
sg118
g292
sg120
(lp299
(dp300
g51
g239
sg139
S'y'
sasg24
(I0
I1
tp301
sg123
g124
sg125
(lp302
sg127
(lp303
(dp304
g51
S'background'
p305
sg139
S'c:#dbdbdb'
p306
sg141
Nsasa(dp307
g116
g196
sg51
S'_Frame5'
p308
sg118
g198
sg120
(lp309
sg24
(I0
I0
I2
I0
tp310
sg123
g124
sg125
(lp311
sg127
(lp312
sa(dp313
g116
g196
sg51
S'_Frame6'
p314
sg118
g198
sg120
(lp315
sg24
(I0
I0
I0
tp316
sg123
g124
sg125
(lp317
sg127
(lp318
sa(dp319
g116
g196
sg51
S'_Frame7'
p320
sg118
g198
sg120
(lp321
sg24
(I0
I0
I3
tp322
sg123
g124
sg125
(lp323
sg127
(lp324
sa(dp325
g116
S'Tkinter'
p326
sg51
S'_Frame8'
p327
sg118
S'Frame'
p328
sg120
(lp329
sg24
(I0
I0
I2
I2
tp330
sg123
g124
sg125
(lp331
sg127
(lp332
sa(dp333
g116
g228
sg51
S'_Frame9'
p334
sg118
g230
sg120
(lp335
(dp336
g51
g239
sg139
S'x'
sasg24
(I0
I1
I1
tp337
sg123
g124
sg125
(lp338
sg127
(lp339
sa(dp340
g116
g130
sg51
S'_LSE4'
p341
sg118
g132
sg120
(lp342
sg24
Nsg123
(lp343
I1850
aI2346
asg125
(lp344
sg127
(lp345
(dp346
g51
g138
sg139
V\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04154
p347
sg141
Nsa(dp348
g51
g143
sg139
S'device'
p349
sg141
S'is.as'
p350
sa(dp351
g51
g147
sg139
S'lse4'
p352
sg141
Nsa(dp353
g51
g150
sg139
g151
sg141
I1
sa(dp354
g51
g153
sg139
g154
sg141
Nsasa(dp355
g116
g130
sg51
S'_LSR4'
p356
sg118
g132
sg120
(lp357
sg24
Nsg123
(lp358
I1850
aI2019
asg125
(lp359
sg127
(lp360
(dp361
g51
g138
sg139
V\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04204
p362
sg141
Nsa(dp363
g51
g143
sg139
S'device'
p364
sg141
S'is.as'
p365
sa(dp366
g51
g147
sg139
S'lsr4'
p367
sg141
Nsa(dp368
g51
g150
sg139
g151
sg141
I1
sa(dp369
g51
g153
sg139
g154
sg141
Nsasa(dp370
g116
g171
sg51
S'_Label1'
p371
sg118
S'Label'
p372
sg120
(lp373
sg24
Nsg123
(lp374
I1850
aI145
asg125
(lp375
sg127
(lp376
(dp377
g51
S'text'
p378
sg139
V\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u043e\u043c\u0435\u0440 COM-\u043f\u043e\u0440\u0442\u0430 (\u0441\u043c. \u0434\u0438\u0441\u043f\u0435\u0442\u0447\u0435\u0440 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432):
p379
sg141
Nsasa(dp380
g116
S'Tkinter'
p381
sg51
S'_Label10'
p382
sg118
S'Label'
p383
sg120
(lp384
sg24
Nsg123
(lp385
I1351
aI7050
asg125
(lp386
sg127
(lp387
(dp388
g51
g378
sg139
S'at frequency trim:'
p389
sg141
Nsasa(dp390
g116
S'Tkinter'
p391
sg51
S'_Label11'
p392
sg118
S'Label'
p393
sg120
(lp394
sg24
Nsg123
(lp395
I3500
aI8767
asg125
(lp396
sg127
(lp397
(dp398
g51
g378
sg139
V\u041b\u0421-\u04204:
p399
sg141
Nsasa(dp400
g116
g391
sg51
g53
sg118
g393
sg120
(lp401
sg24
Nsg123
(lp402
I4674
aI8815
asg125
(lp403
sg127
(lp404
(dp405
g51
g378
sg139
V\u041c\u0410:
p406
sg141
Nsasa(dp407
g116
S'Tkinter'
p408
sg51
S'_Label2'
p409
sg118
S'Label'
p410
sg120
(lp411
sg24
Nsg123
(lp412
I1850
aI2878
asg125
(lp413
sg127
(lp414
(dp415
g51
g378
sg139
V\u0421\u0435\u0440\u0438\u0439\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440:
p416
sg141
Nsasa(dp417
g116
S'Tkinter'
p418
sg51
S'_Label3'
p419
sg118
S'Label'
p420
sg120
(lp421
sg24
Nsg123
(lp422
I1850
aI1076
asg125
(lp423
sg127
(lp424
(dp425
g51
g378
sg139
V\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e:
p426
sg141
Nsa(dp427
g51
S'justify'
p428
sg139
g154
sg141
Nsasa(dp429
g116
g418
sg51
S'_Label4'
p430
sg118
g420
sg120
(lp431
sg24
Nsg123
(lp432
I6969
aI1536
asg125
(lp433
sg127
(lp434
(dp435
g51
g378
sg139
V\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438:
p436
sg141
Nsasa(dp437
g116
g418
sg51
S'_Label5'
p438
sg118
g420
sg120
(lp439
sg24
Nsg123
(lp440
I1850
aI4135
asg125
(lp441
sg127
(lp442
(dp443
g51
g378
sg139
S'phy ipaddr:'
p444
sg141
Nsasa(dp445
g116
g418
sg51
S'_Label6'
p446
sg118
g420
sg120
(lp447
sg24
Nsg123
(lp448
I1850
aI4897
asg125
(lp449
sg127
(lp450
(dp451
g51
g378
sg139
S'eth ipaddr:'
p452
sg141
Nsasa(dp453
g116
g418
sg51
S'_Label7'
p454
sg118
g420
sg120
(lp455
sg24
Nsg123
(lp456
I1850
aI5756
asg125
(lp457
sg127
(lp458
(dp459
g51
g378
sg139
S'phy macaddr:'
p460
sg141
Nsasa(dp461
g116
g418
sg51
S'_Label8'
p462
sg118
g420
sg120
(lp463
sg24
Nsg123
(lp464
I1856
aI6360
asg125
(lp465
sg127
(lp466
(dp467
g51
g378
sg139
S'eth macaddr:'
p468
sg141
Nsasa(dp469
g116
S'Tkinter'
p470
sg51
S'_Label9'
p471
sg118
S'Label'
p472
sg120
(lp473
sg24
Nsg123
(lp474
I1850
aI3640
asg125
(lp475
sg127
(lp476
(dp477
g51
g378
sg139
S'at addr'
p478
sg141
Nsasa(dp479
g116
g130
sg51
S'_MA41'
p480
sg118
g132
sg120
(lp481
sg24
Nsg123
(lp482
I1850
aI1378
asg125
(lp483
sg127
(lp484
(dp485
g51
g138
sg139
V\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-41
p486
sg141
Nsa(dp487
g51
g143
sg139
S'device'
p488
sg141
S'is.as'
p489
sa(dp490
g51
g147
sg139
S'ma41'
p491
sg141
Nsa(dp492
g51
g150
sg139
g151
sg141
I1
sa(dp493
g51
g153
sg139
g154
sg141
Nsasa(dp494
g116
g130
sg51
S'_MA45'
p495
sg118
g132
sg120
(lp496
sg24
Nsg123
(lp497
I1850
aI1705
asg125
(lp498
sg127
(lp499
(dp500
g51
g138
sg139
V\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-45
p501
sg141
Nsa(dp502
g51
g143
sg139
S'device'
p503
sg141
S'is.as'
p504
sa(dp505
g51
g147
sg139
S'ma45'
p506
sg141
Nsa(dp507
g51
g150
sg139
g151
sg141
I1
sa(dp508
g51
g153
sg139
g154
sg141
Nsasa(dp509
g116
g171
sg51
S'_ReceivedText'
p510
sg118
S'Text'
p511
sg120
(lp512
sg24
Nsg123
(lp513
I6969
aI4643
asg125
(lp514
sg127
(lp515
sa(dp516
g116
g470
sg51
S'_ataddr'
p517
sg118
S'Entry'
p518
sg120
(lp519
sg24
Nsg123
(lp520
I1850
aI3906
asg125
(lp521
sg127
(lp522
(dp523
g51
S'state'
p524
sg139
S'disabled'
p525
sg141
Nsa(dp526
g51
g192
sg139
S'ataddr'
p527
sg141
S's.as'
p528
sasa(dp529
g116
S'Tkinter'
p530
sg51
S'_btn_adf_tst'
p531
sg118
S'Button'
p532
sg120
(lp533
(dp534
g51
S'anchor'
p535
sg139
S'w'
sasg24
Nsg123
(lp536
I3737
aI7074
asg125
(lp537
sg127
(lp538
(dp539
g51
g179
sg139
S'adf tst'
p540
sg141
Nsa(dp541
g51
S'state'
p542
sg139
S'disabled'
p543
sg141
Nsa(dp544
g51
g182
sg139
S'_on__btn_adf_tst_command'
p545
sg141
I1
sasa(dp546
g116
g530
sg51
S'_btn_adf_tst_50'
p547
sg118
g532
sg120
(lp548
(dp549
g51
g535
sg139
S'w'
sasg24
Nsg123
(lp550
I4017
aI7098
asg125
(lp551
sg127
(lp552
(dp553
g51
g179
sg139
S'adf tst 50'
p554
sg141
Nsa(dp555
g51
g542
sg139
g543
sg141
Nsa(dp556
g51
g182
sg139
S'_on__btn_adf_tst_50_command'
p557
sg141
I1
sasa(dp558
g116
g530
sg51
S'_btn_at_dst_rt'
p559
sg118
g532
sg120
(lp560
(dp561
g51
g535
sg139
S'w'
sasg24
Nsg123
(lp562
I3506
aI8319
asg125
(lp563
sg127
(lp564
(dp565
g51
g179
sg139
S'at dst 0xXXXX + rt'
p566
sg141
Nsa(dp567
g51
g542
sg139
g543
sg141
Nsa(dp568
g51
g182
sg139
S'_on__btn_at_dst_rt_command'
p569
sg141
I1
sasa(dp570
g116
g391
sg51
S'_btn_ataddr'
p571
sg118
S'Button'
p572
sg120
(lp573
sg24
Nsg123
(lp574
I4297
aI6687
asg125
(lp575
sg127
(lp576
(dp577
g51
g179
sg139
S'at addr'
p578
sg141
Nsa(dp579
g51
g542
sg139
S'disabled'
p580
sg141
Nsa(dp581
g51
g182
sg139
S'_on__btn_ataddr_command'
p582
sg141
I1
sasa(dp583
g116
g530
sg51
S'_btn_dbg0'
p584
sg118
g532
sg120
(lp585
(dp586
g51
g535
sg139
S'w'
sasg24
Nsg123
(lp587
I3658
aI7703
asg125
(lp588
sg127
(lp589
(dp590
g51
g179
sg139
S'dbg 0'
p591
sg141
Nsa(dp592
g51
g542
sg139
g543
sg141
Nsa(dp593
g51
g182
sg139
S'_on__btn_dbg0_command'
p594
sg141
I1
sasa(dp595
g116
g530
sg51
S'_btn_dbg1'
p596
sg118
g532
sg120
(lp597
(dp598
g51
g535
sg139
S'w'
sasg24
Nsg123
(lp599
I4084
aI7763
asg125
(lp600
sg127
(lp601
(dp602
g51
g179
sg139
S'dbg 1'
p603
sg141
Nsa(dp604
g51
g542
sg139
g543
sg141
Nsa(dp605
g51
g182
sg139
S'_on__btn_dbg1_command'
p606
sg141
I1
sasa(dp607
g116
g530
sg51
S'_btn_exe_at_dst_rt'
p608
sg118
g532
sg120
(lp609
sg24
Nsg123
(lp610
I4358
aI8815
asg125
(lp611
sg127
(lp612
(dp613
g51
g179
sg139
S'exe 0xXXXX at dst 0xXXXX + rt'
p614
sg141
Nsa(dp615
g51
g542
sg139
g543
sg141
Nsa(dp616
g51
g182
sg139
S'_on__btn_exe_at_dst_rt_command'
p617
sg141
I1
sasa(dp618
g116
S'Tkinter'
p619
sg51
S'_btn_phyipaddr'
p620
sg118
S'Button'
p621
sg120
(lp622
(dp623
g51
g535
sg139
S'w'
sasg24
Nsg123
(lp624
I3974
aI6699
asg125
(lp625
sg127
(lp626
(dp627
g51
g179
sg139
S'phy ipaddr'
p628
sg141
Nsa(dp629
g51
g542
sg139
S'disabled'
p630
sg141
Nsa(dp631
g51
g182
sg139
S'_on__btn_phyipaddr_command'
p632
sg141
I1
sasa(dp633
g116
g619
sg51
S'_btn_ping'
p634
sg118
g621
sg120
(lp635
sg24
Nsg123
(lp636
I3956
aI6227
asg125
(lp637
sg127
(lp638
(dp639
g51
g179
sg139
S'ping'
p640
sg141
Nsa(dp641
g51
g542
sg139
g630
sg141
Nsa(dp642
g51
g182
sg139
S'_on__btn_ping_command'
p643
sg141
I1
sasa(dp644
g116
g530
sg51
S'_entry_at_addr'
p645
sg118
S'Entry'
p646
sg120
(lp647
sg24
Nsg123
(lp648
I4090
aI8259
asg125
(lp649
sg127
(lp650
(dp651
g51
g192
sg139
S'entry_at_addr'
p652
sg141
S's.as'
p653
sasa(dp654
g116
g530
sg51
S'_entry_at_addr_exe'
p655
sg118
g646
sg120
(lp656
sg24
Nsg123
(lp657
I3834
aI8779
asg125
(lp658
sg127
(lp659
(dp660
g51
g192
sg139
S'entry_at_addr_exe'
p661
sg141
S's.as'
p662
sasa(dp663
g116
g530
sg51
S'_entry_at_addr_rt'
p664
sg118
g646
sg120
(lp665
sg24
Nsg123
(lp666
I4960
aI8815
asg125
(lp667
sg127
(lp668
(dp669
g51
g192
sg139
S'entry_at_addr_rt'
p670
sg141
S's.as'
p671
sasa(dp672
g116
g418
sg51
S'_ethipaddr'
p673
sg118
S'Entry'
p674
sg120
(lp675
sg24
Nsg123
(lp676
I1850
aI5333
asg125
(lp677
sg127
(lp678
(dp679
g51
g524
sg139
g525
sg141
Nsa(dp680
g51
g192
sg139
S'ethipaddr'
p681
sg141
S's.as'
p682
sasa(dp683
g116
g418
sg51
S'_ethmacaddr'
p684
sg118
g674
sg120
(lp685
sg24
Nsg123
(lp686
I1850
aI6638
asg125
(lp687
sg127
(lp688
(dp689
g51
g524
sg139
g525
sg141
Nsa(dp690
g51
g192
sg139
S'ethmacaddr'
p691
sg141
S's.as'
p692
sasa(dp693
g116
S'Tkinter'
p694
sg51
S'_ifbw0'
p695
sg118
S'Radiobutton'
p696
sg120
(lp697
sg24
Nsg123
(lp698
I1327
aI7981
asg125
(lp699
sg127
(lp700
(dp701
g51
g138
sg139
Vifbw 0 (\u0434\u043b\u044f ADF7021)
p702
sg141
Nsa(dp703
g51
g143
sg139
S'ifbw'
p704
sg141
S'is.ai'
p705
sa(dp706
g51
g147
sg139
S'0'
sg141
Nsasa(dp707
g116
g694
sg51
S'_ifbw1'
p708
sg118
g696
sg120
(lp709
sg24
Nsg123
(lp710
I1327
aI8368
asg125
(lp711
sg127
(lp712
(dp713
g51
g138
sg139
Vifbw 1 (\u0434\u043b\u044f ADF7021-N)
p714
sg141
Nsa(dp715
g51
g143
sg139
S'ifbw'
p716
sg141
S'is.ai'
p717
sa(dp718
g51
g147
sg139
S'1'
sg141
Nsasa(dp719
g116
g619
sg51
S'_ipaddr'
p720
sg118
S'Entry'
p721
sg120
(lp722
sg24
Nsg123
(lp723
I4315
aI6227
asg125
(lp724
sg127
(lp725
(dp726
g51
g192
sg139
S'entry_ipaddr'
p727
sg141
S's.as'
p728
sasa(dp729
g116
g171
sg51
S'_label_Rcvd_Text'
p730
sg118
g372
sg120
(lp731
sg24
Nsg123
(lp732
I6969
aI3761
asg125
(lp733
sg127
(lp734
(dp735
g51
g378
sg139
V\u041f\u0440\u0438\u043d\u044f\u0442\u043e \u043e\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430:
p736
sg141
Nsasa(dp737
g116
g381
sg51
S'_left'
p738
sg118
S'Button'
p739
sg120
(lp740
sg24
Nsg123
(lp741
I219
aI7533
asg125
(lp742
sg127
(lp743
(dp744
g51
g179
sg139
S'<-------(left key)--at trim left'
p745
sg141
Nsa(dp746
g51
g542
sg139
S'disabled'
p747
sg141
Nsa(dp748
g51
g182
sg139
S'_on__left_command'
p749
sg141
I1
sasa(dp750
g116
g418
sg51
S'_phyipaddr'
p751
sg118
g674
sg120
(lp752
sg24
Nsg123
(lp753
I1850
aI4510
asg125
(lp754
sg127
(lp755
(dp756
g51
g524
sg139
g525
sg141
Nsa(dp757
g51
g192
sg139
S'phyipaddr'
p758
sg141
S's.as'
p759
sasa(dp760
g116
g418
sg51
S'_phymacaddr'
p761
sg118
g674
sg120
(lp762
sg24
Nsg123
(lp763
I1850
aI6143
asg125
(lp764
sg127
(lp765
(dp766
g51
g524
sg139
g525
sg141
Nsa(dp767
g51
g192
sg139
S'phymacaddr'
p768
sg141
S's.as'
p769
sasa(dp770
g116
g171
sg51
S'_prog_and_increment'
p771
sg118
g173
sg120
(lp772
sg24
Nsg123
(lp773
I1862
aI3349
asg125
(lp774
sg127
(lp775
(dp776
g51
g179
sg139
S'Write to EEPROM ataddr, ipaddr, macaddr, ifbw and increment serial number (up key)'
p777
sg141
Nsa(dp778
g51
g542
sg139
S'disabled'
p779
sg141
Nsa(dp780
g51
g182
sg139
S'_on__prog_and_increment_command'
p781
sg141
I1
sasa(dp782
g116
g381
sg51
S'_right'
p783
sg118
g739
sg120
(lp784
sg24
Nsg123
(lp785
I755
aI7582
asg125
(lp786
sg127
(lp787
(dp788
g51
g179
sg139
S'at trim right--(right key)------->'
p789
sg141
Nsa(dp790
g51
g542
sg139
g747
sg141
Nsa(dp791
g51
g182
sg139
S'_on__right_command'
p792
sg141
I1
sasa(dp793
g116
g171
sg51
S'_send'
p794
sg118
g173
sg120
(lp795
sg24
Nsg123
(lp796
I6932
aI2914
asg125
(lp797
sg127
(lp798
(dp799
g51
g179
sg139
V\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0443
p800
sg141
Nsa(dp801
g51
g542
sg139
S'disabled'
p802
sg141
Nsa(dp803
g51
g182
sg139
S'_on__send_command'
p804
sg141
I1
sasa(dp805
g116
g171
sg51
S'_serialnumber'
p806
sg118
g186
sg120
(lp807
sg24
Nsg123
(lp808
I1850
aI3132
asg125
(lp809
sg127
(lp810
(dp811
g51
g192
sg139
S'serial_number'
p812
sg141
S's.as'
p813
sasa(dp814
g116
S'Tkinter'
p815
sg51
S'_set_ifbw'
p816
sg118
S'Button'
p817
sg120
(lp818
sg24
Nsg123
(lp819
I2209
aI8295
asg125
(lp820
sg127
(lp821
(dp822
g51
g179
sg139
S'Set IFBW'
p823
sg141
Nsa(dp824
g51
g542
sg139
g525
sg141
Nsa(dp825
g51
g182
sg139
S'_on__set_ifbw_command'
p826
sg141
I1
sasa(dp827
g116
g171
sg51
S'_text_to_send'
p828
sg118
g186
sg120
(lp829
sg24
Nsg123
(lp830
I6969
aI2297
asg125
(lp831
sg127
(lp832
(dp833
g51
g192
sg139
S'text_to_send'
p834
sg141
S's.as'
p835
sasasS'BaseClass'
p836
g55
sg34
I1
sasS'VisibleForm'
p837
g52
sS'SelectedForm'
p838
g52
sg51
g6
sa.